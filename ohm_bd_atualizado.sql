-- MySQL Script generated by MySQL Workbench
-- Sat Sep  8 01:35:06 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ohm_bd
-- -----------------------------------------------------
-- Este é o Banco de Dados(BD) referente aos jogo do Challenge 2018 realizado pelo SENAI em parceria com a FIESC, esta versão do BD salva os dados dos usuários e os relaciona a sua respectiva conta, que pode ter como nível de acesso administrador ou jogador. Por sua vez o nível do usuário está associada a suas funções em seus respectivos níveis.

-- -----------------------------------------------------
-- Schema ohm_bd
--
-- Este é o Banco de Dados(BD) referente aos jogo do Challenge 2018 realizado pelo SENAI em parceria com a FIESC, esta versão do BD salva os dados dos usuários e os relaciona a sua respectiva conta, que pode ter como nível de acesso administrador ou jogador. Por sua vez o nível do usuário está associada a suas funções em seus respectivos níveis.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ohm_bd` DEFAULT CHARACTER SET utf8 ;
USE `ohm_bd` ;

-- -----------------------------------------------------
-- Table `ohm_bd`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`usuarios` (
  `login` VARCHAR(20) NOT NULL COMMENT 'A coluna login armazena o login dos usuários, os logins são únicos e não podem repetir-se.',
  `senha` CHAR(32) NOT NULL COMMENT 'Armazena a senha do usuário.',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Armazena o nome do usuário.',
  `email` VARCHAR(85) NOT NULL COMMENT 'Armazena o email do usuário.',
  `ultimo_acesso` DATE NOT NULL COMMENT 'Armazena a data do último acesso do usuário.',
  `permissao` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Armazena a permissão do usuário:\n\n0 para Visitante,\n1 para Jogador e\n2 para Administrador.',
  `nascimento` DATE NOT NULL,
  PRIMARY KEY (`login`))
ENGINE = InnoDB
COMMENT = 'A tabela \"usuarios\" é responsável por armazenar os dados referentes aos usuários cadastrados em geral, administradores e jogadores, estes são diferenciados pelo nível da permissão deles. Dependendo dela, os usuários são redirecionados para diferentes páginas, sendo elas a index_adm e a indexJ.';


INSERT INTO `usuarios` (`login`, `senha`, `nome`, `email`, `ultimo_acesso`, `permissao`, `nascimento`) VALUES
('123', '202CB962AC59075B964B07152D234B70', '123', '123', '2018-07-30', 2, '1200-12-12'),
('1234', '202CB962AC59075B964B07152D234B70', '1234', '1234', '2018-09-07', 1, '1200-12-12'),
('12345', '202CB962AC59075B964B07152D234B70', 'nada', '12345', '2018-08-22', 2, '1200-12-12'),
('nada', '202CB962AC59075B964B07152D234B70', 'nada', 'nada.pont.com@gmail.com', '2018-08-06', 2, '1200-12-12'),
('vini', '202CB962AC59075B964B07152D234B70', 'vini', 'vini', '2018-08-06', 2, '1200-12-12');


-- -----------------------------------------------------
-- Table `ohm_bd`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`clientes` (
  `id` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Armazena o id do cliente, cada id é único.',
  `energia` INT UNSIGNED NOT NULL COMMENT 'Armazena a energia que o jogador possui.',
  `dinheiro` INT UNSIGNED NOT NULL COMMENT 'Armazena o dinheiro do jogador.',
  `franklin` INT UNSIGNED NOT NULL COMMENT 'Armazena a moeda especial, conhecida como franklin, do jogador.',
  `franklin_geral` BIGINT UNSIGNED NOT NULL COMMENT 'Armazena o total de moedas franklin que o jogador ja possuiu.',
  `fase` TINYINT NOT NULL COMMENT 'Armazena a fase na qual o jogador está.',
  `tempo_jogo` TIMESTAMP NOT NULL COMMENT 'Armazena o tempo de jogo do jogador.',
  `maior_pontuacao` INT UNSIGNED NOT NULL COMMENT 'Armazena a maior pontuação do jogadorl',
  `linha_da_pontuacao` TINYINT UNSIGNED NOT NULL COMMENT 'Armazena a linha do tempo em que o jogador fez a maior pontuação.',
  `linha_atual` TINYINT UNSIGNED NOT NULL COMMENT 'Armazena a linha do tempo atual do jogador.',
  `usuarios_login` VARCHAR(45) NOT NULL COMMENT 'Armazena o login de usuário utilizado pelo jogador para acessar sua conta.',
  `dinheiro_geral` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_clientes_usuarios1_idx` (`usuarios_login` ASC),
  CONSTRAINT `fk_clientes_usuarios1`
    FOREIGN KEY (`usuarios_login`)
    REFERENCES `ohm_bd`.`usuarios` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'A tabela \"clientes\" armazena os dados dos clientes, ou sjea, é referentes aos usuários com a permissão de jogadores, afinal ela é responsável por armazenar os dados dos jogadores com relação ao jogo, como sua quantidade de dinheirom faze que se encontram e similiares.';


INSERT INTO `clientes` (`id`, `energia`, `dinheiro`, `franklin`, `franklin_geral`, `fase`, `tempo_jogo`, `maior_pontuacao`, `linha_da_pontuacao`, `linha_atual`, `usuarios_login`, `dinheiro_geral`) VALUES
(0000000012, 0, 10, 0, 0, 1, '2000-01-01 02:00:00', 10, 1, 1, '1234', 10);


-- -----------------------------------------------------
-- Table `ohm_bd`.`maquinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`maquinas` (
  `id` TINYINT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Armazena o id das máquinas, cada id é único.',
  `valor` INT UNSIGNED NOT NULL COMMENT 'Armazena o valor/custo das máquinas.',
  `pps` INT UNSIGNED NOT NULL COMMENT 'Armazena a produção por segundo de energia da máquina.',
  `fase` TINYINT UNSIGNED ZEROFILL NOT NULL COMMENT 'Armazena a fase em que a máquina pode ser comprada/pode aparecer.',
  `subFase` TINYINT UNSIGNED ZEROFILL COMMENT 'Armazena a fase em que a máquina pode ser comprada/pode aparecer.',
  `desc` TEXT NOT NULL COMMENT 'Armazena a descrição da máquina.',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Armazena o nome da máquina',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'A tabela \"maquinas\" armazena os dados referentes as máquinas presentes no jogo, como o valor de sua compra, produção por segundo, a fase onde são encontradas e a descrição delas.';


INSERT INTO `maquinas` (`id`, `valor`, `pps`, `fase`, `subFase`, `desc`, `nome`) VALUES
(001, 0, 1, 010, NULL, 'Manivela que ao ser girada gera energia.', 'manivela'),
(002, 10, 1, 001, NULL, 'Manivela automática que ao girar automaticamente e gera energia.', 'manivela automática'),
(003, 1000, 5, 002, 003, 'Um moinho de vento que produz energia através do vento.', 'Moinho de vento'),
(004, 2500, 10, 002, 003, 'Moinho de água que produz  energia através de correnteza da água.', 'Moinho de agua'),
(005, 8000, 25, 003, NULL, 'Uma maquina a vapor que gera energia através da queima do carvão que gera vapor.', 'Maquina a vapor'),
(006, 17500, 32, 004, 005, 'Uma usina que gera energia através da água.', 'Usina Hidrelétrica'),
(007, 300000, 40, 004, 005, 'Uma maquina que gera energia através das forças do vento.', 'Aerogeradores'),
(008, 47500, 70, 004, 005, '', 'Maquina a vapor v2'),
(009, 60000, 90, 005, NULL, 'Uma maquina que produz energia nuclear.', 'Maquina Nuclear'),
(010, 75000, 100, 005, NULL, '', 'Maquina a vapor v3'),
(011, 80000, 122, 005, NULL, 'Maquina que produz energia com o auxilio do sol.', 'Energia Solar'),
(012, 125000, 150, 006, NULL, '', 'Antimatéria'),
(013, 180000, 180, 006, NULL, 'Maquina que produz energia com o auxilio do sol.', 'Energia Solar v2'),
(014, 220000, 210, 006, NULL, 'Uma maquina que produz energia nuclear.', 'Maquina Nuclear v2');


-- -----------------------------------------------------
-- Table `ohm_bd`.`fases`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`fases` (
  `id` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Armazena o id da fase, ele é único.',
  `tempo_jogo` TIMESTAMP NOT NULL COMMENT 'Armazena o tempo em que o jogador permaneceu na fase desde seu início.',
  `franklin` INT UNSIGNED NOT NULL COMMENT 'Armazena a moeda especial, conhecida como franklin, do jogador.',
  `frankling_geral` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Armazena o total de moedas franklin que o jogador ja possuiu.',
  `dinheiro` INT UNSIGNED NOT NULL COMMENT 'Armazena o dinheiro do jogador.',
  `energia` INT UNSIGNED NOT NULL COMMENT 'Armazena a energia que o jogador possui.',
  `clientes_id` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Armazena o id do cliente e o associa a fase em que está.',
  PRIMARY KEY (`id`),
  INDEX `fk_fases_clientes1_idx` (`clientes_id` ASC),
  CONSTRAINT `fk_fases_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `ohm_bd`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'A tabela \"fases\" armazena os dados referentes as fases por onde o jogador passa, assim salvando as informações do jogador quando ele deixa a sessão ou passa para a próxima fase. Ela serve como backup caso o jogador resolva sairda sessão e/ou reiniciar a fase.';


-- -----------------------------------------------------
-- Table `ohm_bd`.`clientes_tem_maquinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`clientes_tem_maquinas` (
  `clientes_id` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Armazena o id do cliente que possui determinada máquina, associa a tabela \"clientes\" com a tabela \"maquinas\".',
  `maquinas_id` TINYINT UNSIGNED ZEROFILL NOT NULL COMMENT 'Armazena o id da máquina que o cliente possui, associa a tabela \"clientes\" com a tabela \"maquinas\".',
  `multiplicador` SMALLINT UNSIGNED NOT NULL COMMENT 'Armazena o multiplicador que as máquinas podem ganhar através das pesquisas que o jogador pode fazer.',
  `quantidade` SMALLINT UNSIGNED NOT NULL COMMENT 'Armazena a quantidade de determinadas máquinas que o jogador possui.',
  `pesquisada` char(1) not null COMMENT "Armazena se a maquina foi ou não pesquisada. S para quando já foi pesquisada e N para quando não foi",
  PRIMARY KEY (`clientes_id`, `maquinas_id`),
  INDEX `fk_clientes_has_maquinas1_maquinas1_idx` (`maquinas_id` ASC),
  INDEX `fk_clientes_has_maquinas1_clientes1_idx` (`clientes_id` ASC),
  CONSTRAINT `fk_clientes_has_maquinas1_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `ohm_bd`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clientes_has_maquinas1_maquinas1`
    FOREIGN KEY (`maquinas_id`)
    REFERENCES `ohm_bd`.`maquinas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'A tabela \"clientes_tem_maquinas\" é responsável por armazenar dados que relacionam os jogadores com as máquinas, assim englobando sua quantidade e o multiplicador que elas podem possuir como bonus.';


INSERT INTO `clientes_tem_maquinas` (`clientes_id`, `maquinas_id`, `multiplicador`, `quantidade`,`pesquisada`) VALUES
(0000000012, 001, 1, 1,"S"),
(0000000012, 002, 1, 0,"N");
-- -----------------------------------------------------
-- Table `ohm_bd`.`Baterias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`baterias` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `armazenamento` INT UNSIGNED NOT NULL,
  `desc` TEXT NOT NULL,
  `fase` SMALLINT(1) UNSIGNED NOT NULL,
  `valor` INT UNSIGNED NOT NULL COMMENT 'Valor da pesquisa em energia.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


INSERT INTO `baterias` (`id`, `nome`, `armazenamento`, `desc`, `fase`,`valor`) VALUES
(1, 'bateria', 15000, 'Uma bateria que armazena 15k de energia.', 1,500);


-- -----------------------------------------------------
-- Table `ohm_bd`.`Denuncias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`Denuncias` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `denuncia` VARCHAR(25) NOT NULL,
  `clientes_id` INT UNSIGNED ZEROFILL NOT NULL,
  `usuarios_login` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Denuncias_clientes1_idx` (`clientes_id` ASC),
  INDEX `fk_Denuncias_usuarios1_idx` (`usuarios_login` ASC),
  CONSTRAINT `fk_Denuncias_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `ohm_bd`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Denuncias_usuarios1`
    FOREIGN KEY (`usuarios_login`)
    REFERENCES `ohm_bd`.`usuarios` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ohm_bd`.`Pesquisas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`Pesquisas` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pesquisa` VARCHAR(45) NOT NULL,
  `tempo` TIME NOT NULL COMMENT 'Tempo que a pesquisa demora para ficar pronta.',
  `valor` INT UNSIGNED NOT NULL COMMENT 'Valor da pesquisa em energia.',
  `fase` SMALLINT UNSIGNED NOT NULL COMMENT 'fase que a pesquisa esta disponível.',
  `mudaFase` SMALLINT UNSIGNED COMMENT 'informa se a pesquisa muda de fase ou não: null não muda \n 1 muda',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


INSERT INTO `pesquisas` (`id`, `pesquisa`, `tempo`, `valor`, `fase`,`mudaFase`) VALUES
(1, 'Moinho de vento', '00:10:00', 10000, 1,1);


-- -----------------------------------------------------
-- Table `ohm_bd`.`clientes_tem_baterias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`clientes_tem_baterias` (
  `clientes_id` INT UNSIGNED ZEROFILL NOT NULL,
  `baterias_id` INT UNSIGNED NOT NULL,
  `quantidade` SMALLINT UNSIGNED NOT NULL COMMENT 'Armazena a quantidade determinadas de baterias que o jogador possui.',
  PRIMARY KEY (`clientes_id`, `baterias_id`),
  INDEX `fk_clientes_has_baterias_baterias1_idx` (`baterias_id` ASC),
  INDEX `fk_clientes_has_baterias_clientes1_idx` (`clientes_id` ASC),
  CONSTRAINT `fk_clientes_has_Baterias_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `ohm_bd`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clientes_has_baterias_baterias1`
    FOREIGN KEY (`baterias_id`)
    REFERENCES `ohm_bd`.`baterias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



INSERT INTO `clientes_tem_baterias` (`clientes_id`, `baterias_id`, `quantidade`) VALUES
(0000000012, 1, 1);

-- -----------------------------------------------------
-- Table `ohm_bd`.`clientes_tem_Pesquisas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ohm_bd`.`clientes_tem_Pesquisas` (
  `clientes_id` INT UNSIGNED ZEROFILL NOT NULL,
  `pesquisas_id` INT UNSIGNED NOT NULL,
  `tempo` TIME NOT NULL,
  `estado` VARCHAR(10) NOT NULL COMMENT 'Armazena o estado da pesuisa se ele está finalizada, iniciada ou n iniciada',
  PRIMARY KEY (`clientes_id`, `pesquisas_id`),
  INDEX `fk_clientes_has_Pesquisa_Pesquisa1_idx` (`pesquisas_id` ASC),
  INDEX `fk_clientes_has_Pesquisa_clientes1_idx` (`clientes_id` ASC),
  CONSTRAINT `fk_clientes_has_Pesquisa_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `ohm_bd`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clientes_has_Pesquisa_Pesquisa1`
    FOREIGN KEY (`pesquisas_id`)
    REFERENCES `ohm_bd`.`Pesquisas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `clientes_tem_pesquisas` (`clientes_id`, `pesquisas_id`, `tempo`, `estado`) VALUES
(0000000012, 1, '00:10:00', 'n iniciada');

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
